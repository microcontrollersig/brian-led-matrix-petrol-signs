{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../src/routes/Home.svelte","../../src/routes/sendcommmand.js","../../src/routes/imageupload.js","../../src/routes/ImageUpload.svelte","../../src/routes/ImageCreator.svelte","../../src/routes/drawhangman.js","../../src/routes/Hangman.svelte","../../src/routes/Dino.svelte","../../src/routes/RandomNumber.svelte","../../src/routes/TetrisTime.svelte","../../src/routes.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script>\r\n</script>\r\n\r\n<main>\r\n    <section>\r\n        <h1>Apps</h1>\r\n        <ul>\r\n            <li><a href=\"#/imageupload\">Image Upload</a></li>\r\n            <li><a href=\"#/imagecreator\">Image Creator</a></li>\r\n            <li><a href=\"#/qrcode\">QRCode</a></li>\r\n            <li><a href=\"#/tetristime\">Tetris Time</a></li>\r\n            <li><a href=\"#/abbrev\">Internet Abbrevations</a></li>\r\n            <li><a href=\"#/maze\">Maze</a></li>\r\n            <li><a href=\"#/randomnumber\">Random Number Generator</a></li>\r\n            <li><a href=\"#/scoreboard\">Scoreboard</a></li>\r\n        </ul>\r\n    </section>\r\n\r\n    <section>\r\n        <h1>Games</h1>\r\n        <ul>\r\n            <li><a href=\"#/hangman\">Hangman</a></li>\r\n            <li><a href=\"#/dino\">Dino</a></li>\r\n        </ul>\r\n    </section>\r\n</main>\r\n\r\n<style>\r\n    h1 {\r\n        margin-top: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n</style>\r\n","async function post_www_url_encoded(data) {\r\n    const body = new URLSearchParams();\r\n    for (let key in data) {\r\n        body.append(key, data[key]);\r\n    }\r\n    //console.log(body);\r\n    return await fetch('/command', { method: \"POST\", body });\r\n}\r\n\r\nfunction send_multiple(dataCollection) {\r\n    dataCollection.forEach(element => {\r\n        post_www_url_encoded(element);\r\n    });\r\n\r\n}\r\n\r\nexport { post_www_url_encoded, send_multiple };\r\n","import { post_www_url_encoded } from './sendcommmand.js';\r\n\r\n\r\nfunction handleFiles() {\r\n  //const fileList = this.files; /* now you can work with the file list */\r\n  //const pbmfile = fileList[0];\r\n  const pbmfile = document.getElementById('input').files[0];\r\n  console.log(pbmfile.name);\r\n  console.log(pbmfile.size);\r\n  const reader = new FileReader();\r\n  reader.addEventListener('loadend', async () => {\r\n    console.log(reader.result);\r\n    const rawbuffer = new Uint8Array(reader.result);\r\n    console.log(rawbuffer);\r\n    /*\r\n    for (let i = 8; i < pbmfile.size ; i++) {\r\n      console.log(rawbuffer[i]);\r\n    }\r\n    */\r\n    let startofWidth = 3;\r\n    let newlinecounter = 0;\r\n    if (rawbuffer[startofWidth] === 0x23) {\r\n      for (let i = 0; i < pbmfile.size; i++) {\r\n        if (rawbuffer[i] === 0x0A) {\r\n          newlinecounter = newlinecounter + 1;\r\n        }\r\n        if (newlinecounter === 2) {\r\n          if (rawbuffer[i + 1] === 0x0A) {\r\n            startofWidth = i + 2;\r\n          }\r\n\r\n          else {\r\n            startofWidth = i + 1;\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    const width1 = rawbuffer[startofWidth];\r\n    const width2 = rawbuffer[startofWidth + 1];\r\n    let width = 10 * (width1 - 0x30) + (width2 - 0x30);\r\n    console.log(\"width:\", width);\r\n    let column = 0;\r\n    let row = 0;\r\n    let startDataIndex;\r\n\r\n    for (let k = startofWidth + 1; k < pbmfile.size; k++) {\r\n      if (rawbuffer[k] === 0x0A) {\r\n        startDataIndex = k + 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(\"------------start of real data-----------------------------\");\r\n\r\n    //Clear LED Screen\r\n    const reponse1 = await post_www_url_encoded({\r\n      \"command\": \"@\"\r\n    });\r\n\r\n\r\n    for (let i = startDataIndex; i < pbmfile.size; i++) {\r\n      for (let j = 7; j >= 0; j--) {\r\n        let val = rawbuffer[i] & (1 << j);\r\n        if (val) {\r\n          console.log(\"1 at (\", row, \",\", column, \")\");\r\n          //Set pixel (row,column)\r\n          let response2 = await post_www_url_encoded({\r\n            \"command\": \"P\",\r\n            \"x\": column,\r\n            \"y\": row,\r\n            \"val\": 1\r\n          });\r\n\r\n          //canvas->setPixel(row,column,1);\r\n        }\r\n\r\n        else {\r\n          console.log(\"0 at (\", row, \",\", column, \")\");\r\n          //canvas->setPixel(row,column,0);\r\n        }\r\n\r\n        column = column + 1;\r\n        if (column === width) {\r\n          row = row + 1;\r\n          column = 0;\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n    //Updates LED with contents of canvas/in-memory buffer\r\n    const reponse3 = await post_www_url_encoded({\r\n      \"command\": \"U\"\r\n    });\r\n  });\r\n  reader.readAsArrayBuffer(pbmfile);\r\n}\r\n\r\nexport { handleFiles };","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { handleFiles } from \"./imageupload.js\";\r\n\r\n  onMount(() => {\r\n    const inputElement = document.getElementById(\"input\");\r\n    inputElement.addEventListener(\"change\", handleFiles, false);\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <section>\r\n    <h1>Image Upload</h1>\r\n    <p>Please upload a binary PBM file</p>\r\n    <div>\r\n      <input type=\"file\" id=\"input\" />\r\n    </div>\r\n  </section>\r\n</main>\r\n\r\n<style>\r\n</style>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { handleFiles } from \"./imageupload.js\";\r\n  import { post_www_url_encoded } from \"./sendcommmand.js\";\r\n\r\n  const LEDPanelCount = 3072;\r\n  let LEDPanelData = new Array(LEDPanelCount).fill(0);\r\n  const LEDCount = 256;\r\n  const hiddencheckboxclassName = Array.from(\r\n    Array(LEDCount).keys(),\r\n    (x) => \"c\" + x\r\n  );\r\n  const hiddenlabelclassName = Array.from(Array(LEDCount).keys(), (x) => [\r\n    \"s\" + x,\r\n    \"c\" + x,\r\n  ]);\r\n  const panels = Array.from(Array(12).keys(), (x) => x + 1);\r\n  let current_panel = 1;\r\n  const panel_width = 96;\r\n\r\n  function str2ab(str) {\r\n    var buf = new ArrayBuffer(str.length); // 2 bytes for each char\r\n    var bufView = new Uint8Array(buf);\r\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return buf;\r\n  }\r\n\r\n  function binaryToByteArray() {\r\n    const pbmData = new Uint8Array(Math.floor(LEDPanelCount / 8));\r\n    let index;\r\n    let val = 0;\r\n    let pbmIndex = 0;\r\n    let endOfByte;\r\n    for (let i = 0; i < LEDPanelCount; i++) {\r\n      val = val | (LEDPanelData[i] << (7 - (i % 8)));\r\n      endOfByte = (i + 1) % 8;\r\n      if (endOfByte === 0) {\r\n        pbmData[pbmIndex] = val;\r\n        val = 0;\r\n        pbmIndex = pbmIndex + 1;\r\n      }\r\n    }\r\n    return pbmData;\r\n  }\r\n\r\n  function SaveFile() {\r\n    //const data = new Uint8Array(LEDPanelData);\r\n    const data = binaryToByteArray();\r\n    const headerstring = \"P4\\n96 32\\n\";\r\n    //const header = new Uint8Array(9);\r\n\r\n    const header = str2ab(headerstring);\r\n    const headerView = new Uint8Array(header);\r\n    const buf = new Uint8Array(data.length + headerView.length).fill(0);\r\n    buf.set(headerView, 0);\r\n    buf.set(data, headerView.length);\r\n    console.log(buf);\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n      window.navigator.msSaveOrOpenBlob(buf.buffer, \"blob.pbm\");\r\n    } else {\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      const url = (window.URL ? URL : webkitURL).createObjectURL(\r\n        new Blob([buf]),\r\n        { type: \"data:application/octet-stream\" }\r\n      );\r\n      a.href = url;\r\n      const date = new Date(Date.now());\r\n      const options = {\r\n        weekday: \"short\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        seconds: \"numeric\",\r\n      };\r\n      a.download =\r\n        \"brians-petrol-signs-\" +\r\n        date\r\n          .toLocaleString(\"en-AU\", options)\r\n          .replaceAll(\",\", \"-\")\r\n          .replace(/\\s/g, \"\") +\r\n        \".pbm\";\r\n      a.click();\r\n      setTimeout(() => {\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /*\r\n  function post_www_url_encoded(data) {\r\n    const body = new URLSearchParams();\r\n    for (let key in data) {\r\n      body.append(key, data[key]);\r\n    }\r\n    fetch(\"/command\", { method: \"POST\", body });\r\n  }\r\n  */\r\n\r\n  function drawPixel(x, y, val) {\r\n    const data = {\r\n      command: \"Y\",\r\n      x: x,\r\n      y: y,\r\n      val: val,\r\n    };\r\n    post_www_url_encoded(data);\r\n  }\r\n\r\n  function hydrate() {\r\n    console.log(LEDPanelData);\r\n\r\n    const panel_x = (current_panel - 1) % 6;\r\n    const panel_y = Math.floor((current_panel - 1) / 6);\r\n    let offset = 16 * panel_x + 16 * panel_width * panel_y;\r\n    let index = offset;\r\n    for (let i = 0; i < 256; i++) {\r\n      document.getElementById(`c${i}`).checked = LEDPanelData[index] === 1;\r\n      index = index + 1;\r\n      if (index % 16 === 0) {\r\n        index = index + panel_width - 16;\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearallcheckboxes() {\r\n    document.querySelectorAll(\"input\").forEach((elem) => {\r\n      elem.checked = false;\r\n    });\r\n  }\r\n\r\n  function loadCheckboxes() {\r\n    const pbmfile = document.getElementById(\"input\").files[0];\r\n    console.log(pbmfile.name);\r\n    console.log(pbmfile.size);\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"loadend\", async () => {\r\n      console.log(reader.result);\r\n      const rawbuffer = new Uint8Array(reader.result);\r\n      console.log(rawbuffer);\r\n      let index = 0;\r\n\r\n      let startOfCommentsIndex = 3;\r\n      let newlinecounter = 0;\r\n      let startOfDataIndex = 9;\r\n\r\n      if (rawbuffer[startOfCommentsIndex] === 0x23) {\r\n        for (let i = startOfCommentsIndex; i < pbmfile.size; i++) {\r\n          if (rawbuffer[i] === 0x0a) newlinecounter = newlinecounter + 1;\r\n\r\n          if (newlinecounter === 2) {\r\n            startOfDataIndex = i + 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = startOfDataIndex; i < pbmfile.size; i++) {\r\n        const val = rawbuffer[i];\r\n        for (let j = 7; j >= 0; j--) {\r\n          if (val & (1 << j)) {\r\n            LEDPanelData[index] = 1;\r\n          } else {\r\n            LEDPanelData[index] = 0;\r\n          }\r\n\r\n          index = index + 1;\r\n        }\r\n      }\r\n      console.log(LEDPanelData);\r\n      document.getElementById(\"panel\" + current_panel).click();\r\n    });\r\n    reader.readAsArrayBuffer(pbmfile);\r\n  }\r\n\r\n  function handleLoadFile() {\r\n    handleFiles();\r\n    loadCheckboxes();\r\n  }\r\n\r\n  onMount(() => {\r\n    //post_www_url_encoded({ command: \"@\" }); //clear LEDs\r\n    //const inputElement = document.getElementById(\"input\");\r\n    //inputElement.addEventListener(\"change\", handleLoadFile, false);\r\n\r\n    document.getElementById(\"saveButton\").addEventListener(\"click\", (event) => {\r\n      SaveFile();\r\n    });\r\n\r\n    document.getElementById(\"loadButton\").addEventListener(\"click\", (event) => {\r\n      document.getElementById(\"input\").click();\r\n      loadCheckboxes();\r\n    });\r\n\r\n    document\r\n      .getElementById(\"clearButton\")\r\n      .addEventListener(\"click\", (event) => {\r\n        const data = { command: \"@\" };\r\n        post_www_url_encoded(data);\r\n        LEDPanelData.fill(0);\r\n        document.getElementById(\"panel\" + current_panel).click();\r\n      });\r\n\r\n    document.querySelectorAll(\"input[type=checkbox]\").forEach((checkbox) => {\r\n      checkbox.addEventListener(\"click\", (event) => {\r\n        const ledindex = parseInt(event.target.id.substring(1));\r\n        const panel_x = (current_panel - 1) % 6;\r\n        const panel_y = Math.floor((current_panel - 1) / 6);\r\n        const offset_x = ledindex % 16;\r\n        const offset_y = Math.floor(ledindex / 16);\r\n        const dataIndex =\r\n          offset_x +\r\n          panel_width * offset_y +\r\n          16 * panel_x +\r\n          16 * panel_y * panel_width;\r\n        console.log(\"ledindex\", ledindex, \"dataindex\", dataIndex);\r\n        if (event.target.checked === true) LEDPanelData[dataIndex] = 1;\r\n        else LEDPanelData[dataIndex] = 0;\r\n\r\n        const x = (ledindex % 16) + 16 * panel_x;\r\n        const y = Math.floor(ledindex / 16) + 16 * panel_y;\r\n        console.log(\"x:\", x, \" y:\", y, \"val:\", LEDPanelData[dataIndex]);\r\n        console.log(LEDPanelData);\r\n        drawPixel(x, y, LEDPanelData[dataIndex]);\r\n      });\r\n    });\r\n\r\n    document.querySelectorAll(\".panel\").forEach((panel) => {\r\n      panel.addEventListener(\"click\", (event) => {\r\n        document.querySelectorAll(\".panel\").forEach((p) => {\r\n          p.classList.remove(\"active\");\r\n        });\r\n        event.target.classList.add(\"active\");\r\n        current_panel = parseInt(event.target.innerHTML);\r\n        clearallcheckboxes();\r\n        hydrate();\r\n      });\r\n    });\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <section id=\"menu\">\r\n    <ul>\r\n      <li><button id=\"saveButton\">SAVE</button></li>\r\n      <li><button id=\"loadButton\">LOAD</button></li>\r\n      <li class=\"clearbutton\"><button id=\"clearButton\">CLEAR</button></li>\r\n    </ul>\r\n  </section>\r\n\r\n  {#each hiddencheckboxclassName as checkboxclassname}\r\n    <input type=\"checkbox\" id={checkboxclassname} name={checkboxclassname} />\r\n  {/each}\r\n\r\n  <section id=\"guts\">\r\n    <div id=\"board\" class=\"grid\">\r\n      {#each hiddenlabelclassName as label}\r\n        <label for={label[1]} id={label[0]} class=\"grid__item\" />\r\n      {/each}\r\n    </div>\r\n    <div id=\"panelselection\">\r\n      <h2>PANEL SELECTION</h2>\r\n      <div class=\"panels\">\r\n        {#each panels as panel}\r\n          <button\r\n            class=\"panel {panel === current_panel ? 'active' : ''}\"\r\n            id=\"panel{panel}\">{panel}</button\r\n          >\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <input type=\"file\" id=\"input\" style=\"display:none;\" />\r\n</main>\r\n\r\n<style lang=\"scss\">\r\n  #guts {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  .panels {\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    background-color: #c4c4c4;\r\n  }\r\n\r\n  .panel:hover {\r\n    background-color: #e4e4e4;\r\n  }\r\n\r\n  .panel {\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 80px;\r\n    background-color: #fff;\r\n    border: 2px solid #c4c4c4;\r\n    font-size: 2rem;\r\n    color: #333;\r\n    text-shadow: 0 1px rgba(255, 255, 255, 0.4);\r\n    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.05);\r\n    background-image: linear-gradient(\r\n      to bottom,\r\n      transparent,\r\n      transparent,\r\n      50%,\r\n      rgba(0, 0, 0, 0.04)\r\n    );\r\n  }\r\n\r\n  .active {\r\n    border: 2px solid green;\r\n    color: red;\r\n    background-color: lightcyan;\r\n  }\r\n\r\n  ul button {\r\n    margin: 0;\r\n  }\r\n\r\n  ul {\r\n    padding: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .grid {\r\n    display: -ms-grid;\r\n    -ms-grid-columns: repeat(16, 1fr);\r\n    -ms-grid-rows: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(16, 1fr);\r\n    grid-template-rows: auto;\r\n  }\r\n\r\n  /* \r\n.buttons {\r\n  max-width: 800px;\r\n  margin: 30px auto;\r\n  box-sizing: border-box;\r\n\r\n  button {\r\n    width: 6rem;\r\n  }\r\n}\r\n*/\r\n\r\n  .grid__item::before {\r\n    content: \"\";\r\n    display: block;\r\n    padding-top: 100%;\r\n  }\r\n\r\n  /*\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: #212121;\r\n  }\r\n  */\r\n\r\n  .grid {\r\n    max-width: 600px;\r\n    /*margin: 30px auto;*/\r\n    box-sizing: border-box;\r\n    border: 10px solid #2a351f;\r\n  }\r\n  .grid__item {\r\n    /*background-color: #eeedd3;*/\r\n    background: #c0c0c0;\r\n    border: 2px outset #ececec;\r\n    transition: all 400ms linear;\r\n  }\r\n\r\n  $columns: 255;\r\n\r\n  @for $i from 0 through $columns {\r\n    #c#{$i}:checked ~ section .grid #s#{$i} {\r\n      background-color: green;\r\n      margin: 0px;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  /*\r\n\r\n  #c1:checked ~ .grid #s1 {\r\n    background-color: green;    \r\n    margin: 0px;  \r\n    transform: scale(1.0);\r\n  \r\n  }\r\n  \r\n  #c2:checked ~ .grid #s2 {\r\n    background-color: green;\r\n    margin: 0px;\r\n    transform: scale(1.0);\r\n  }\r\n  */\r\n\r\n  input {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    top: -99px;\r\n    left: -99px;\r\n  }\r\n\r\n  li.clearbutton > :global(:last-child) {\r\n    margin-left: 350px;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n  }\r\n\r\n  /*\r\n  .selected {\r\n    color: red;\r\n  }\r\n  */\r\n</style>\r\n","\r\n\r\nconst hangman =\r\n    [\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"Q\"],\r\n                [\"x\", 10],\r\n                [\"y\", 0],\r\n                [\"width\", 2],\r\n                [\"height\", 13],\r\n                [\"color\", 1]\r\n            ]\r\n            ),\r\n            new Map([\r\n                [\"command\", \"Q\"],\r\n                [\"x\", 10],\r\n                [\"y\", 0],\r\n                [\"width\", 22],\r\n                [\"height\", 2],\r\n                [\"color\", 1]\r\n            ]\r\n            ),\r\n            new Map([\r\n                [\"command\", \"Q\"],\r\n                [\"x\", 5],\r\n                [\"y\", 13],\r\n                [\"width\", 12],\r\n                [\"height\", 2],\r\n                [\"color\", 1]\r\n            ]\r\n            ),\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 2],\r\n                [\"x2\", 31],\r\n                [\"y2\", 3],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"N\"],\r\n                [\"centerx\", 31],\r\n                [\"centery\", 5],\r\n                [\"radius\", 2],\r\n                [\"bordercolor\", 1],\r\n                [\"fillcolor\", 0]\r\n            ]\r\n            )\r\n        ],\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 8],\r\n                [\"x2\", 31],\r\n                [\"y2\", 9],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 10],\r\n                [\"x2\", 27],\r\n                [\"y2\", 6],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 10],\r\n                [\"x2\", 35],\r\n                [\"y2\", 6],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 9],\r\n                [\"x2\", 31],\r\n                [\"y2\", 11],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 11],\r\n                [\"x2\", 28],\r\n                [\"y2\", 14],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ],\r\n\r\n        [\r\n            new Map([\r\n                [\"command\", \"L\"],\r\n                [\"x1\", 31],\r\n                [\"y1\", 11],\r\n                [\"x2\", 34],\r\n                [\"y2\", 14],\r\n                [\"color\", 1]\r\n            ]\r\n            )\r\n        ]\r\n\r\n\r\n    ];\r\n\r\nfunction drawHangmanPart(index) {\r\n    let drawingCommands = [];\r\n\r\n    for (const elem of hangman[index]) {\r\n        const body = new URLSearchParams();\r\n        elem.forEach(function (v, k) {\r\n            body.append(k, v);\r\n        });\r\n\r\n        drawingCommands.push(fetch('/command', { method: \"POST\", body }));\r\n    }\r\n\r\n    Promise.all(drawingCommands);\r\n}\r\n\r\nexport { drawHangmanPart };","<script>\r\n    import { post_www_url_encoded } from \"./sendcommmand.js\";\r\n    import { drawHangmanPart } from \"./drawhangman.js\";\r\n\r\n    let categories = [\r\n        {\r\n            id: \"country\",\r\n            name: \"Country\",\r\n            url: \"https://cdn.jsdelivr.net/gh/raspberrypisig/corpora/custom/countries-limited.json\",\r\n        },\r\n        {\r\n            id: \"fruit\",\r\n            name: \"Fruit\",\r\n            url: \"https://cdn.jsdelivr.net/gh/raspberrypisig/corpora/custom/fruits-limited.json\",\r\n        },\r\n        {\r\n            id: \"vegetable\",\r\n            name: \"Vegetable\",\r\n            url: \"https://cdn.jsdelivr.net/gh/raspberrypisig/corpora/custom/vegetables-limited.json\",\r\n        },\r\n        {\r\n            id: \"animal\",\r\n            name: \"Animal\",\r\n            url: \"https://cdn.jsdelivr.net/gh/raspberrypisig/corpora/custom/animals-limited.json\",\r\n        },\r\n    ];\r\n    const HANGMAN_GAMESTATE = {\r\n        STARTGAME: 0,\r\n        SELECTCATEGORY: 1,\r\n        PLAYING: 2,\r\n        ENDGAME: 3,\r\n    };\r\n    let hangmanGameState = HANGMAN_GAMESTATE.SELECTCATEGORY;\r\n    let answer;\r\n    let revealedLetters;\r\n    let categorySelection = \"\";\r\n    let itemCapitalized;\r\n    let incorrectAttempts = 0;\r\n    let incorrrectLetters = \"\";\r\n    let selectedCategoryName;\r\n    const availableLettersCopy = [\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\",\r\n        \"F\",\r\n        \"G\",\r\n        \"H\",\r\n        \"I\",\r\n        \"J\",\r\n        \"K\",\r\n        \"L\",\r\n        \"M\",\r\n        \"N\",\r\n        \"O\",\r\n        \"P\",\r\n        \"Q\",\r\n        \"R\",\r\n        \"S\",\r\n        \"T\",\r\n        \"U\",\r\n        \"V\",\r\n        \"W\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"Z\",\r\n    ];\r\n    let availableLetters = availableLettersCopy;\r\n\r\n    function startNewGame() {\r\n        hangmanGameState = HANGMAN_GAMESTATE.SELECTCATEGORY;\r\n        revealedLetters = \"\";\r\n        incorrectAttempts = 0;\r\n        incorrrectLetters = \"\";\r\n        availableLetters = availableLettersCopy;\r\n    }\r\n\r\n    function displayIncorrectLetters(letters) {\r\n        const l = letters.split(\"\").reduce(function (arr, v, i) {\r\n            return arr.concat([v, \" \"]);\r\n        }, []);\r\n        if (letters.length >= 5) {\r\n            post_www_url_encoded({\r\n                command: \"R\",\r\n                x1: 48,\r\n                y1: 0,\r\n                text1: l.slice(0, 8).join(\"\"),\r\n                fontIndex: 1,\r\n            });\r\n\r\n            post_www_url_encoded({\r\n                command: \"R\",\r\n                x1: 48,\r\n                y1: 8,\r\n                text1: l.slice(8).join(\"\"),\r\n                fontIndex: 1,\r\n            });\r\n        } else {\r\n            console.log(l.join(\"\"));\r\n            post_www_url_encoded({\r\n                command: \"R\",\r\n                x1: 48,\r\n                y1: 0,\r\n                text1: l.join(\"\"),\r\n                fontIndex: 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    function selectCategory(id) {\r\n        const selectedCategories = categories.filter(\r\n            (category) => category.id === id\r\n        );\r\n        const selectedCategory = selectedCategories[0];\r\n        categorySelection = selectedCategory.name;\r\n        selectedCategoryName = selectedCategory.name.toLocaleUpperCase();\r\n        const selectedCategoryURL = selectedCategory.url;\r\n\r\n        hangmanGameState = HANGMAN_GAMESTATE.PLAYING;\r\n\r\n        // converted github link to jsdelivr CDN\r\n        fetch(selectedCategoryURL)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                const item = data[Math.floor(Math.random() * data.length)];\r\n                itemCapitalized = item.toUpperCase();\r\n\r\n                const categoryNameSize = selectedCategoryName.length;\r\n                const itemSize = itemCapitalized.length;\r\n                answer = itemCapitalized;\r\n                console.log(\"category\", selectedCategoryName);\r\n                console.log(\"category name size:\", categoryNameSize);\r\n                console.log(\"random item:\", itemCapitalized);\r\n                console.log(\"random item size:\", itemSize);\r\n                post_www_url_encoded({\r\n                    command: \"@\",\r\n                });\r\n\r\n                const spaces = Array(itemSize).fill(\" \");\r\n                const underscores = Array(itemSize).fill(\"_\");\r\n                revealedLetters = underscores;\r\n\r\n                const words = underscores.reduce(function (arr, v, i) {\r\n                    return arr.concat([v, \" \"]);\r\n                }, []);\r\n\r\n                console.log(words);\r\n\r\n                drawHangmanPart(incorrectAttempts);\r\n\r\n                post_www_url_encoded({\r\n                    command: \"M\",\r\n                    x1: 0,\r\n                    y1: 16,\r\n                    text1: selectedCategoryName,\r\n                    x2: 0,\r\n                    y2: 24,\r\n                    text: words.join(\"\"),\r\n                    fontIndex: 1,\r\n                });\r\n            });\r\n    }\r\n\r\n    function guessLetter(letter) {\r\n        availableLetters = availableLetters.filter((elem) => elem !== letter);\r\n        let text = \"\";\r\n        if (itemCapitalized.indexOf(letter) !== -1) {\r\n            console.log(\"letter in word\");\r\n            console.log(revealedLetters);\r\n            console.log(answer);\r\n            const indexes = answer\r\n                .split(\"\")\r\n                .map((v, i) => (v === letter ? i : -1))\r\n                .filter((elem) => elem !== -1);\r\n            console.log(indexes);\r\n            for (let i = 0; i < indexes.length; i++) {\r\n                const j = indexes[i];\r\n                revealedLetters[j] = letter;\r\n            }\r\n            console.log(revealedLetters);\r\n            const b = revealedLetters.reduce(function (arr, v, i) {\r\n                return arr.concat([v, \" \"]);\r\n            }, []);\r\n            text = b.join(\"\");\r\n            console.log(text);\r\n            const trimmedtext = text.replace(/\\s+/g, \"\");\r\n            console.log(trimmedtext);\r\n            if (trimmedtext === answer) {\r\n                console.log(\"word is revealed.\");\r\n                hangmanGameState = HANGMAN_GAMESTATE.ENDGAME;\r\n            }\r\n            post_www_url_encoded({\r\n                command: \"M\",\r\n                x1: 0,\r\n                y1: 16,\r\n                text1: selectedCategoryName,\r\n                x2: 0,\r\n                y2: 24,\r\n                text: text,\r\n                fontIndex: 1,\r\n            });\r\n        } else {\r\n            console.log(\"letter not in word.\");\r\n            incorrectAttempts = incorrectAttempts + 1;\r\n            incorrrectLetters = incorrrectLetters + letter;\r\n            if (incorrectAttempts === 7) {\r\n                hangmanGameState = HANGMAN_GAMESTATE.ENDGAME;\r\n                const formattedAnswer = answer\r\n                    .split(\"\")\r\n                    .reduce(function (arr, v, i) {\r\n                        return arr.concat([v, \" \"]);\r\n                    }, []);\r\n                console.log(formattedAnswer.join(\"\"));\r\n                post_www_url_encoded({\r\n                    command: \"M\",\r\n                    x1: 0,\r\n                    y1: 16,\r\n                    text1: selectedCategoryName,\r\n                    x2: 0,\r\n                    y2: 24,\r\n                    text: formattedAnswer.join(\"\"),\r\n                    fontIndex: 1,\r\n                });\r\n            }\r\n\r\n            displayIncorrectLetters(incorrrectLetters);\r\n            drawHangmanPart(incorrectAttempts);\r\n        }\r\n        console.log(incorrectAttempts);\r\n    }\r\n</script>\r\n\r\n<main>\r\n    <h1>Hangman</h1>\r\n    {#if hangmanGameState == HANGMAN_GAMESTATE.ENDGAME}\r\n        <section>\r\n            <button on:click={() => startNewGame()}>NEW GAME</button>\r\n            <div>ANSWER: <span>{answer}</span></div>\r\n        </section>\r\n    {/if}\r\n    {#if hangmanGameState == HANGMAN_GAMESTATE.SELECTCATEGORY}\r\n        <section>\r\n            <h2>Select category</h2>\r\n            <ul>\r\n                {#each categories as category}\r\n                    <li>\r\n                        <a\r\n                            class=\"categories\"\r\n                            id={category.id}\r\n                            on:click={() => selectCategory(category.id)}\r\n                            >{category.name}</a\r\n                        >\r\n                    </li>\r\n                {/each}\r\n            </ul>\r\n        </section>\r\n    {/if}\r\n    {#if hangmanGameState == HANGMAN_GAMESTATE.PLAYING}\r\n        <section>\r\n            <h2>Category</h2>\r\n            <p>{categorySelection}</p>\r\n        </section>\r\n    {/if}\r\n    {#if hangmanGameState == HANGMAN_GAMESTATE.PLAYING}\r\n        <section>\r\n            <h2>Select Letter</h2>\r\n            {#each availableLetters as letter}\r\n                <button class=\"letters\" on:click={() => guessLetter(letter)}\r\n                    >{letter}</button\r\n                >\r\n            {/each}\r\n        </section>\r\n    {/if}\r\n</main>\r\n\r\n<style lang=\"scss\">\r\n    .letters {\r\n        margin-left: 30px;\r\n    }\r\n</style>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { post_www_url_encoded, send_multiple } from \"./sendcommmand.js\";\r\n\r\n  let x = 0;\r\n  let isJumping = false;\r\n  const y_initial = 5;\r\n  const velocity_initial = 20;\r\n  const g = 1;\r\n  let y = y_initial;\r\n  let velocity = velocity_initial;\r\n\r\n  function arrowDownPressed() {\r\n    //\r\n  }\r\n\r\n  function arrowUpPressed() {\r\n    isJumping = true;\r\n  }\r\n\r\n  function spaceBarPressed() {\r\n    post_www_url_encoded({\r\n      command: \"@\",\r\n    });\r\n\r\n    const backgroundFull = [\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"d\",\r\n        typeindex: 0,\r\n        objectindex: 0,\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"d\",\r\n        typeindex: 0,\r\n        objectindex: 1,\r\n        x: 96,\r\n        y: 0,\r\n      },\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"d\",\r\n        typeindex: 0,\r\n        objectindex: 2,\r\n        x: 192,\r\n        y: 0,\r\n      },\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"d\",\r\n        typeindex: 0,\r\n        objectindex: 0,\r\n        x: 288,\r\n        y: 0,\r\n      },\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"d\",\r\n        typeIndex: 1,\r\n        objectindex: 0,\r\n        x: 80,\r\n        y: 16,\r\n      },\r\n      {\r\n        dinocommand: \"z\",\r\n        subcommand: \"u\",\r\n        typeindex: -1,\r\n        objectindex: -1,\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n    ];\r\n\r\n    send_multiple(backgroundFull);\r\n\r\n    setInterval(() => {\r\n      const data = [\r\n        {\r\n          command: \"z\",\r\n          subcommand: \"u\",\r\n          arg1: -1,\r\n          arg2: -1,\r\n          x: x,\r\n          arg4: -1,\r\n        },\r\n        {\r\n          dinocommand: \"z\",\r\n          subcommand: \"i\",\r\n          typeindex: 2,\r\n          objectindex: 0,\r\n          x: 5,\r\n          y: y,\r\n        },\r\n      ];\r\n      send_multiple(data);\r\n      x = x + 1;\r\n      if (x === 96 * 3) x = 0;\r\n\r\n      if (isJumping) {\r\n        y = y - 1;\r\n        if (y === -1) {\r\n          y = 5;\r\n          isJumping = false;\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener(\"keydown\", function (event) {\r\n      const keycode = event.code;\r\n      if (keycode === \"Space\") {\r\n        spaceBarPressed();\r\n      } else if (keycode === \"ArrowUp\") {\r\n        arrowUpPressed();\r\n      } else if (keycode === \"ArrowDown\") {\r\n        arrowDownPressed();\r\n      }\r\n    });\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>Dino</h1>\r\n</main>\r\n\r\n<style>\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { post_www_url_encoded } from \"./sendcommmand.js\";\r\n\r\n    onMount(() => {\r\n        post_www_url_encoded({\r\n            command: \"^\",\r\n            timeout: \"3000\",\r\n        });\r\n    });\r\n</script>\r\n\r\n<main>\r\n    <h1>Random Number Generator (between 1 and 100)</h1>\r\n</main>\r\n\r\n<style>\r\n</style>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { post_www_url_encoded } from \"./sendcommmand.js\";\r\n\r\n  let isInitializing = true;\r\n  let timeRemaining = 60;\r\n  let prevSeconds = 0;\r\n\r\n  function updateTime() {\r\n    const currentDate = new Date();\r\n    let hours = currentDate.getHours().toString();\r\n    let minutes = currentDate.getMinutes().toString();\r\n    if (hours < 10) hours = \"0\" + hours;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    const time = hours + \":\" + minutes;\r\n    post_www_url_encoded({\r\n      command: \"V\",\r\n      time: time,\r\n    });\r\n  }\r\n\r\n  function setTime() {\r\n    let currentDate = new Date();\r\n    let currentSeconds = currentDate.getSeconds();\r\n    if (prevSeconds === 59 && currentSeconds === 0) {\r\n      prevSeconds = 0;\r\n      updateTime();\r\n    } else {\r\n      prevSeconds = currentSeconds;\r\n    }\r\n    setTimeout(() => setTime(), 250);\r\n  }\r\n\r\n  function updateTimeRemaining() {\r\n    const currentDate = new Date();\r\n    const seconds = currentDate.getSeconds();\r\n    if (seconds > 0) {\r\n      timeRemaining = 60 - seconds;\r\n      setTimeout(() => updateTimeRemaining(), 250);\r\n    } else {\r\n      isInitializing = false;\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    updateTimeRemaining();\r\n    setTime();\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>Tetris Time Animation</h1>\r\n\r\n  {#if isInitializing === true}\r\n    Animation starts in {timeRemaining} seconds.\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n</style>\r\n","import Home from './routes/Home.svelte';\r\nimport ImageUpload from './routes/ImageUpload.svelte';\r\nimport ImageCreator from './routes/ImageCreator.svelte';\r\nimport Hangman from './routes/Hangman.svelte';\r\nimport Dino from './routes/Dino.svelte';\r\nimport RandomNumber from './routes/RandomNumber.svelte';\r\nimport TetrisTime from './routes/TetrisTime.svelte';\r\n\r\nexport default {\r\n    '/': Home,\r\n    '/imageupload': ImageUpload,\r\n    '/imagecreator': ImageCreator,\r\n    '/hangman': Hangman,\r\n    '/dino': Dino,\r\n    '/randomnumber': RandomNumber,\r\n    '/tetristime': TetrisTime\r\n};","<script>\r\n\timport Router from 'svelte-spa-router';\r\n\timport routes from './routes';\r\n</script>\r\n\r\n<main>\r\n\t<Router {routes} />\r\n</main>\r\n\r\n<style>\r\n\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","subscribe","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","store","unsub","unsubscribe","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","params","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","state","__svelte_spa_router_scrollY","scrollTo","__svelte_spa_router_scrollX","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","loading","loadingParams","loaded","default","onDestroy","history","scrollRestoration","async","post_www_url_encoded","body","URLSearchParams","fetch","method","send_multiple","dataCollection","handleFiles","pbmfile","getElementById","files","console","log","reader","FileReader","rawbuffer","Uint8Array","startofWidth","newlinecounter","width","startDataIndex","column","row","command","j","x","y","val","readAsArrayBuffer","important","style","setProperty","LEDPanelCount","LEDPanelData","hiddencheckboxclassName","hiddenlabelclassName","panels","current_panel","SaveFile","pbmData","Math","floor","endOfByte","pbmIndex","binaryToByteArray","header","buf","ArrayBuffer","bufView","strLen","charCodeAt","str2ab","headerView","navigator","msSaveOrOpenBlob","buffer","url","URL","webkitURL","createObjectURL","Blob","date","Date","now","weekday","month","day","hour","minute","seconds","download","toLocaleString","replaceAll","replace","click","setTimeout","revokeObjectURL","startOfDataIndex","loadCheckboxes","querySelectorAll","checkbox","ledindex","parseInt","id","panel_x","panel_y","dataIndex","checked","drawPixel","panel","classList","remove","innerHTML","elem","hangman","drawHangmanPart","drawingCommands","v","all","ENDGAME","SELECTCATEGORY","PLAYING","categories","HANGMAN_GAMESTATE","STARTGAME","answer","revealedLetters","itemCapitalized","selectedCategoryName","hangmanGameState","categorySelection","incorrectAttempts","incorrrectLetters","availableLettersCopy","availableLetters","startNewGame","selectCategory","selectedCategory","category","toLocaleUpperCase","selectedCategoryURL","response","json","item","random","toUpperCase","categoryNameSize","itemSize","underscores","words","reduce","concat","x1","y1","text1","x2","y2","join","fontIndex","guessLetter","letter","indexes","trimmedtext","formattedAnswer","letters","displayIncorrectLetters","isJumping","keycode","code","dinocommand","subcommand","typeindex","objectindex","typeIndex","setInterval","arg1","arg2","arg4","timeout","isInitializing","timeRemaining","prevSeconds","setTime","currentSeconds","getSeconds","currentDate","hours","getHours","toString","minutes","getMinutes","time","updateTime","updateTimeRemaining"],"mappings":"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"}